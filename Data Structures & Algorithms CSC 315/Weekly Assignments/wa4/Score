* Correctly named repository and weekly directory (wa4)
* Correctly named working file (wa4.cpp)
* Code Compiles without errors or warnings
* Simple Tests Pass
* Complex Tests Pass
  
Point Deductions:
  Binary files in the repo
  Insert has growth > O(log N)
  Memory Leaks / Violations      (e.g. valgrind --leak-check=full tests)

Checked but no points deducted yet:
  Inconsistent code formatting
  No internal comments
-------------------------------------------------------------------------------
Total:  15/15

Notes:

   * Good job, Ray.  Code is nice and clean, compact, easy to read.  Seems
     similar to other code I've seen somewhere.

Driver Tests (right-right, left-left, right-left, left-right,
              right-left off root, left-right off root, right-right off root,
              left-left off root).  1024 random inserts



PASS
PASS
PASS
PASS
PASS
PASS
PASS
PASS
Starting insert of 1024 values 
PASS
 
Performance:
Inserts Elapsed_Time
1024 0.000366367
2048 0.000760287
4096 0.00175243
8192 0.00399176
16384 0.0124835
32768 0.0426934
65536 0.0814298
131072 0.159544
262144 0.345978
524288 0.87552
1048576 2.15176
 
Memory checking:
==6187== Memcheck, a memory error detector
==6187== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6187== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==6187== Command: driver
==6187== 
PASS
PASS
PASS
PASS
PASS
PASS
PASS
PASS
Starting insert of 1024 values 
PASS
==6187== 
==6187== HEAP SUMMARY:
==6187==     in use at exit: 0 bytes in 0 blocks
==6187==   total heap usage: 3,178 allocs, 3,178 frees, 194,260 bytes allocated
==6187== 
==6187== All heap blocks were freed -- no leaks are possible
==6187== 
==6187== For counts of detected and suppressed errors, rerun with: -v
==6187== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
